{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Pick_UserDTO.Exclude_keyofUserDTO.active__": {
				"properties": {
					"roles": {
						"items": {
							"type": "string",
							"enum": [
								"super_admin",
								"admin",
								"creator",
								"editor",
								"viewer",
								"moderator"
							]
						},
						"type": "array"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"createdAt": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"roles",
					"id",
					"name",
					"email",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserResponseDTO": {
				"properties": {
					"roles": {
						"items": {
							"type": "string",
							"enum": [
								"super_admin",
								"admin",
								"creator",
								"editor",
								"viewer",
								"moderator"
							]
						},
						"type": "array"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"createdAt": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"roles",
					"id",
					"name",
					"email",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserRequestDTO": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"roles": {
						"items": {
							"type": "string",
							"enum": [
								"super_admin",
								"admin",
								"creator",
								"editor",
								"viewer",
								"moderator"
							],
							"nullable": false
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"email",
					"password",
					"roles"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_UpdateUserRequest_": {
				"properties": {},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_UpdateUserRequest.id_": {
				"properties": {},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UpdateUserRequestDTO": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"ProfileResponseDTO": {
				"properties": {
					"itemsCreated": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"itemsCreated"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ItemDTO": {
				"properties": {
					"id": {
						"type": "string"
					},
					"visibility": {
						"type": "string",
						"enum": [
							"public",
							"logged_in",
							"private"
						],
						"nullable": false
					},
					"createdBy": {
						"type": "string"
					},
					"createdByUserName": {
						"type": "string"
					},
					"createdAt": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"imageId": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"visibility",
					"createdBy",
					"createdByUserName",
					"createdAt",
					"updatedAt",
					"imageId",
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SearchItemsResponseDTO": {
				"properties": {
					"items": {
						"items": {
							"$ref": "#/components/schemas/ItemDTO"
						},
						"type": "array"
					},
					"totalCount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"items",
					"totalCount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ItemSortableKey": {
				"enum": [
					"name",
					"visibility",
					"createdBy",
					"source",
					"createdAt",
					"updatedAt"
				],
				"type": "string"
			},
			"Pick_SearchItemsRequestDTO.Exclude_keyofSearchItemsRequestDTO.order-or-orderBy__": {
				"properties": {
					"itemsPerPage": {
						"type": "number",
						"format": "double"
					},
					"pageNumber": {
						"type": "number",
						"format": "double"
					},
					"onlyMyItems": {
						"type": "boolean"
					},
					"search": {
						"type": "string"
					},
					"visibility": {
						"items": {
							"type": "string",
							"enum": [
								"public",
								"logged_in",
								"private"
							]
						},
						"type": "array"
					},
					"hasImage": {
						"type": "boolean"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"SearchQueryParams": {
				"properties": {
					"itemsPerPage": {
						"type": "number",
						"format": "double"
					},
					"pageNumber": {
						"type": "number",
						"format": "double"
					},
					"onlyMyItems": {
						"type": "boolean"
					},
					"search": {
						"type": "string"
					},
					"visibility": {
						"items": {
							"type": "string",
							"enum": [
								"public",
								"logged_in",
								"private"
							]
						},
						"type": "array"
					},
					"hasImage": {
						"type": "boolean"
					},
					"order": {
						"type": "string",
						"enum": [
							"asc",
							"desc"
						],
						"nullable": false
					},
					"orderBy": {
						"$ref": "#/components/schemas/ItemSortableKey"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ItemResponseDTO": {
				"properties": {
					"id": {
						"type": "string"
					},
					"visibility": {
						"type": "string",
						"enum": [
							"public",
							"logged_in",
							"private"
						],
						"nullable": false
					},
					"createdBy": {
						"type": "string"
					},
					"createdByUserName": {
						"type": "string"
					},
					"createdAt": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"imageId": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"visibility",
					"createdBy",
					"createdByUserName",
					"createdAt",
					"updatedAt",
					"imageId",
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MyItemsResponseDTO": {
				"items": {
					"$ref": "#/components/schemas/ItemResponseDTO"
				},
				"type": "array"
			},
			"ImageDTO": {
				"properties": {
					"id": {
						"type": "string"
					},
					"visibility": {
						"type": "string",
						"enum": [
							"public",
							"logged_in",
							"private"
						],
						"nullable": false
					},
					"createdBy": {
						"type": "string"
					},
					"createdByUserName": {
						"type": "string"
					},
					"createdAt": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"fileName": {
						"type": "string"
					},
					"mimeType": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"ownerId": {
						"type": "string"
					},
					"ownerType": {
						"type": "string",
						"enum": [
							"recipe",
							"blogpost",
							"item"
						],
						"nullable": false
					},
					"base64": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"visibility",
					"createdBy",
					"createdByUserName",
					"createdAt",
					"updatedAt",
					"fileName",
					"mimeType",
					"size",
					"base64"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateItemResponseDTO": {
				"properties": {
					"item": {
						"$ref": "#/components/schemas/ItemDTO"
					},
					"image": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ImageDTO"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"item",
					"image"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_OmitNotMutableCreationProperties_ItemDTO_.Exclude_keyofOmitNotMutableCreationProperties_ItemDTO_.imageId__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"visibility": {
						"type": "string",
						"enum": [
							"public",
							"logged_in",
							"private"
						]
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"visibility",
					"description"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_OmitNotMutableCreationProperties_ItemDTO_.imageId_": {
				"$ref": "#/components/schemas/Pick_OmitNotMutableCreationProperties_ItemDTO_.Exclude_keyofOmitNotMutableCreationProperties_ItemDTO_.imageId__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Pick_ImageDTO.Exclude_keyofImageDTO.NotMutableCreationPropertiesType__": {
				"properties": {
					"visibility": {
						"type": "string",
						"enum": [
							"public",
							"logged_in",
							"private"
						]
					},
					"base64": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"mimeType": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"ownerId": {
						"type": "string"
					},
					"ownerType": {
						"type": "string",
						"enum": [
							"recipe",
							"blogpost",
							"item"
						]
					}
				},
				"required": [
					"visibility",
					"base64",
					"fileName",
					"mimeType",
					"size"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_ImageDTO.NotMutableCreationPropertiesType_": {
				"$ref": "#/components/schemas/Pick_ImageDTO.Exclude_keyofImageDTO.NotMutableCreationPropertiesType__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"CreateImageRequestDTO": {
				"properties": {
					"visibility": {
						"type": "string",
						"enum": [
							"public",
							"logged_in",
							"private"
						]
					},
					"base64": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"mimeType": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"ownerId": {
						"type": "string"
					},
					"ownerType": {
						"type": "string",
						"enum": [
							"recipe",
							"blogpost",
							"item"
						]
					}
				},
				"required": [
					"visibility",
					"base64",
					"fileName",
					"mimeType",
					"size"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateItemRequestDTO": {
				"properties": {
					"item": {
						"$ref": "#/components/schemas/Omit_OmitNotMutableCreationProperties_ItemDTO_.imageId_"
					},
					"image": {
						"allOf": [
							{
								"$ref": "#/components/schemas/CreateImageRequestDTO"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"item",
					"image"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateItemResponseDTO": {
				"properties": {
					"item": {
						"$ref": "#/components/schemas/ItemDTO"
					},
					"image": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ImageDTO"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"item",
					"image"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_OmitNotMutableUpdateProperties_ItemDTO__": {
				"properties": {},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_OmitNotMutableUpdateProperties_ItemDTO_.id_": {
				"properties": {},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"PartialExceptFor_OmitNotMutableUpdateProperties_ItemDTO_.id_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Partial_OmitNotMutableUpdateProperties_ItemDTO__"
					},
					{
						"$ref": "#/components/schemas/Pick_OmitNotMutableUpdateProperties_ItemDTO_.id_"
					}
				]
			},
			"Pick_ImageDTO.Exclude_keyofImageDTO.NotMutableUpdatePropertiesType__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"updatedAt": {
						"type": "number",
						"format": "double"
					},
					"visibility": {
						"type": "string",
						"enum": [
							"public",
							"logged_in",
							"private"
						]
					},
					"base64": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"mimeType": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"ownerId": {
						"type": "string"
					},
					"ownerType": {
						"type": "string",
						"enum": [
							"recipe",
							"blogpost",
							"item"
						]
					}
				},
				"required": [
					"id",
					"updatedAt",
					"visibility",
					"base64",
					"fileName",
					"mimeType",
					"size"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_ImageDTO.NotMutableUpdatePropertiesType_": {
				"$ref": "#/components/schemas/Pick_ImageDTO.Exclude_keyofImageDTO.NotMutableUpdatePropertiesType__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"OmitNotMutableUpdateProperties_ImageDTO_": {
				"$ref": "#/components/schemas/Omit_ImageDTO.NotMutableUpdatePropertiesType_"
			},
			"UpdateItemRequestDTO": {
				"properties": {
					"item": {
						"$ref": "#/components/schemas/PartialExceptFor_OmitNotMutableUpdateProperties_ItemDTO_.id_"
					},
					"image": {
						"allOf": [
							{
								"$ref": "#/components/schemas/OmitNotMutableUpdateProperties_ImageDTO_"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"item",
					"image"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ImageResponseDTO": {
				"properties": {
					"id": {
						"type": "string"
					},
					"visibility": {
						"type": "string",
						"enum": [
							"public",
							"logged_in",
							"private"
						],
						"nullable": false
					},
					"createdBy": {
						"type": "string"
					},
					"createdByUserName": {
						"type": "string"
					},
					"createdAt": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"fileName": {
						"type": "string"
					},
					"mimeType": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"ownerId": {
						"type": "string"
					},
					"ownerType": {
						"type": "string",
						"enum": [
							"recipe",
							"blogpost",
							"item"
						],
						"nullable": false
					},
					"base64": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"visibility",
					"createdBy",
					"createdByUserName",
					"createdAt",
					"updatedAt",
					"fileName",
					"mimeType",
					"size",
					"base64"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_OmitNotMutableUpdateProperties_ImageDTO__": {
				"properties": {},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_OmitNotMutableUpdateProperties_ImageDTO_.size-or-base64-or-id_": {
				"properties": {},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UpdateImageRequestDTO": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"LoginRequestDTO": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "access_token",
				"in": "query"
			},
			"tsoa_auth": {
				"type": "oauth2",
				"flows": {
					"implicit": {
						"authorizationUrl": "http://swagger.io/api/oauth/dialog",
						"scopes": {
							"write:pets": "modify things",
							"read:pets": "read things"
						}
					}
				}
			}
		}
	},
	"info": {
		"title": "backend",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/user": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserResponseDTO"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Insert",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserRequestDTO"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "Put",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "NotFound"
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserRequestDTO"
							}
						}
					}
				}
			}
		},
		"/user/{id}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "NotFound"
					},
					"501": {
						"description": "NotImplemented"
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "NotFound"
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/profile": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProfileResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"profile"
				],
				"security": [],
				"parameters": []
			}
		},
		"/": {
			"get": {
				"operationId": "Ping",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/ping": {
			"get": {
				"operationId": "Ping",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/secureping": {
			"get": {
				"operationId": "Ping",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/apikeyping": {
			"get": {
				"operationId": "Ping",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/items": {
			"get": {
				"operationId": "Search",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SearchItemsResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"Item"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "itemsPerPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageNumber",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "onlyMyItems",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "visibility",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"public",
									"logged_in",
									"private"
								]
							}
						}
					},
					{
						"in": "query",
						"name": "hasImage",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/ItemSortableKey"
						}
					}
				]
			}
		},
		"/myitems": {
			"get": {
				"operationId": "Myitems",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MyItemsResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"Item"
				],
				"security": [],
				"parameters": []
			}
		},
		"/item/{itemId}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemResponseDTO"
								}
							}
						}
					},
					"404": {
						"description": "NotFound"
					},
					"422": {
						"description": "UnprocessableContent"
					}
				},
				"tags": [
					"Item"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteIem",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "NotFound"
					},
					"422": {
						"description": "UnprocessableContent"
					}
				},
				"tags": [
					"Item"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/item": {
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateItemResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"Item"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateItemRequestDTO"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UpdateItemResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "NotFound"
					}
				},
				"tags": [
					"Item"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateItemRequestDTO"
							}
						}
					}
				}
			}
		},
		"/image/{imageId}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ImageResponseDTO"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "NotFound"
					},
					"422": {
						"description": "UnprocessableContent"
					}
				},
				"tags": [
					"Image"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "imageId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/image": {
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ImageResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"Image"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateImageRequestDTO"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ImageResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"Image"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateImageRequestDTO"
							}
						}
					}
				}
			}
		},
		"/image/{itemId}": {
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "NotFound"
					},
					"422": {
						"description": "UnprocessableContent"
					}
				},
				"tags": [
					"Image"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"422": {
						"description": "UnprocessableContent"
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequestDTO"
							}
						}
					}
				}
			}
		},
		"/auth/logout": {
			"post": {
				"operationId": "Logout",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/refresh": {
			"post": {
				"operationId": "Refresh",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/status": {
			"get": {
				"operationId": "Status",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDTO"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/api/v1"
		}
	]
}